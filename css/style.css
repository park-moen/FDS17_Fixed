@import url(./normalize.css);
@import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css);

*,
*::before,
*::after {
  box-sizing: border-box;
}
/* 생선되게 전에 요소에 특성을 미리 지정하는 방법 */
html {
  font-size: 10px;
}

body {
  font-size: 1.4rem;
  color: #181818;
  background-color: #fff;
  font-family: "Spoqa Han Sans";
  font-weight: 400;
}
/* 숨김 콘텐츠 */
.a11y-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  /* 가상커서가 w, h를 0으로 받으면 인식 못한다.
  top: -9999px을 사용하면 스크린리더에 에러가 발생 */
  overflow: hidden;
  margin: -1px;
  clip-path: polygon(0 0, 0 0, 0 0);
}
/* 링크 스타일 */
a {
  text-decoration: none;
  color: inherit;
}
/* 레이아웃 */
.container {
  background-color: #eee;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-end;
  align-items: center;
}
.header,
.visual,
.main,
.slogan,
.footer {
  width: 940px;
}
/* 헤더 */
.header {
  background-color: #fff;
  border-radius: 0 0 15px 15px;
  padding: 0 30px 0 30px;
  position: relative;
}
/* 로고 */
.logo {
  position: absolute;
  top: 25px;
  left: 60px;
}
/* 멤버링크 */
.member {
  list-style: none;
  padding-left: 0;
  margin-top: 8px;
  margin-bottom: 8px;
  margin-right: -8px;
  font-size: 0;
  text-align: right;
}
.member li,
.member a {
  display: inline-block;
}
.member li {
  font-size: 1.4rem;
}
.member [aria-hidden] {
  /* margin: 0 5px; */
}
.member a {
  text-transform: uppercase;
  padding: 2px 8px 2px 3px;
}
/* 메인 메뉴 */
.menu {
  background: #ea5a2e
    linear-gradient(
      to bottom,
      #f27a30 0%,
      #c18326 30%,
      #ea5a2e 51%,
      #ea5a2e 98%,
      #d15329 100%
    );
  padding-left: 0;
  list-style: none;
  margin: 0 0 50px;
  padding-left: 225px;
  border-top: 2px solid #000;
  border-radius: 0 0 5px 5px;
}
.menu::after {
  content: "";
  display: block;
  clear: both;
}
.menu-item {
  float: left;
}
.btn-menu {
  background-color: transparent;
  color: #fff;
  font-size: 1.6rem;
  font-weight: 700;
  border: 0;
  border-left: 2px solid rgba(255, 255, 255, 0.85);
  padding: 15px 20px;
  cursor: pointer;
  text-shadow: 1px 0px 0 #000, 0px 1px 0 #000, -1px 0px 0 #000, 0px -1px 0 #000;
}
.sub-menu {
  background-color: pink;
  position: absolute;
  display: none;
}
.visual {
  background-color: lime;
  height: 120px;
}
/* main content */
.main {
  background-color: blue;
  min-height: 450px;
  padding: 30px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: flex-start;
}
.group1 {
  background: pink;
  width: 250px;
}
.group2 {
  background: lightgreen;
  width: 380px;
}
.group3 {
  background: coral;
  width: 190px;
}
.slogan {
  background-color: orange;
}
.footer-bg {
  background-color: purple;
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
}
.footer {
  background-color: skyblue;
}

/* ** 고정형 레이아웃 **

1. 가운데 정렬(화면 해상도)
2. 일관성을 가지고 디자인하기
3. header의 높이는 픽스하지 않는다
4. 의도에 따라서 픽스 시킨다.
5. main도 높이를 픽스하지 않고/ 최소 높이만 준다(min-height)
6. slogan, footer는 픽스하지 않는다 (픽스 = height의 값을 주다)

   ** header 순서 정하기 **

7. 로고 >>>>> text logo / text logo >>> img logo(alt속성 추기) >>>>> 대제목<h1.logo> , <a>기능
8. 멤버 링크 >>>> div만 쓰지 않고 기계도 해석 가능하게 만들기 >>>>> 목록화 (ul, ol.member >>> li)
   > > > > > > :은 span으로 묵기(읽을 필요는 없음 >> aria-hidden = true 사용 >> 보조 기기가 읽지 않음)
9. 내비게이션 */

/* offset 설정 : 위치값을 설정하다 
- static은 offset을  가지고 있지 않다./ 렐러티브를 가지지 않으면 가장 최상위 요소를 찾아간다 . 
-
*/
