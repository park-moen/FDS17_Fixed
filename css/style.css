@import url(./normalize.css);
@import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css);
@import url(./fontello.css);
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* 생선되게 전에 요소에 특성을 미리 지정하는 방법 */
html {
  font-size: 10px;
}

body {
  font-size: 1.4rem;
  color: #181818;
  font-family: "Spoqa Han Sans";
  font-weight: 400;
  background: url(./images/bg_flower.png) no-repeat 50% 0 scroll,
    #eee linear-gradient(180deg, #aaaa 0%, #ccc 50%, #fff 100%);
}
/* 링크 스타일 */
a {
  text-decoration: none;
  color: inherit;
}
.a11y-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip-path: polygon(0 0, 0 0, 0 0);
}
.claerfix::after {
  content: "";
  display: block;
  clear: both;
}
/* 레이아웃 */
.container {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-end;
  align-items: center;
}
.header,
.visual,
.main,
.slogan,
.footer {
  width: 940px;
}
/* 헤더 */
.header {
  background-color: #fff;
  border-radius: 0 0 15px 15px;
  padding: 0 30px 0 30px;
  position: relative;
}
/* 로고 */
.logo {
  position: absolute;
  top: 33px;
  left: 60px;
}
/* 멤버링크 */
.member {
  list-style: none;
  padding-left: 0;
  margin-top: 8px;
  margin-bottom: 5px;
  margin-right: -8px;
  font-size: 0;
  text-align: right;
}
.member li,
.member a {
  display: inline-block;
}
.member li {
  font-size: 1.4rem;
}
.member [aria-hidden] {
  /* margin: 0 5px; */
}
.member a {
  text-transform: uppercase;
  line-height: 2em;
  padding-right: 5px;
}
.member li:first-child a {
  padding-left: 15px;
}
.member a > span {
  /* background-color: yellow; */
  padding: 5px 5px 5px 0;
}
.menu {
  background-color: yellow;
  list-style: none;
  height: 47px;
  margin: 0;
  margin-bottom: 40px;
  padding-left: 225px;
  border-radius: 0 0 5px 5px;
  border-top: 2px solid #000;
  background-color: #fc6203;
  background: linear-gradient(
    to right,
    #fc6203 0%,
    #ea874d 35%,
    #f9af84 51%,
    #f96b18 100%
  );
}
.menu-item {
  float: left;
  position: relative;
  white-space: nowrap;
  /* display: inline-block; */
}
.menu-act .btn-menu {
  color: #fceb03;
}
.menu-act .btn-menu::after {
  content: "";
  height: 2px;
  background-color: #000;
  display: block;
}
.btn-menu {
  background-color: transparent;
  border: 0;
  padding: 0 20px;
  font-size: 1.6rem;
  font-weight: 700;
  color: #fff;
  line-height: 45px;
  border-left: 2px solid rgba(255, 255, 255, 0.5);
  text-shadow: 1px 0 0 #000, 0 1px 0 #000, -1px 0 0 #000, 0 -1px 0 #000;
}
.sub-menu {
  position: absolute;
  list-style: none;
  padding: 0;
}
.sub-menu li {
  display: inline-block;
}
.sub-menu a {
  line-height: 2.5em;
  margin-right: 15px;
  font-weight: 400;
}
.sub-menu li:last-child a {
  margin-right: 0;
}
.sub-menu li::before {
  content: "\f192";
  font-family: "fontello";
  display: inline-block;
  margin-right: 5px;
  text-align: center;
}
.sub-menu li:hover::before,
.sub-menu li:focus::before {
  content: "\e800";
}
.sub-menu1,
.sub-menu2,
.sub-menu3 {
  left: 0;
}
.sub-menu4,
.sub-menu5,
.sub-menu6 {
  right: 0;
}
/* 임시 숨김 */
.sub-menu1 {
  display: block;
}
.sub-menu2 {
  display: none;
}
.sub-menu3 {
  display: none;
}
.sub-menu4 {
  display: none;
}
.sub-menu5 {
  display: none;
}
.sub-menu6 {
  display: none;
}
@keyframes textAni {
  0% {
    transform: translate(0, 0);
    color: rgba(0, 0, 0, 0);
    font-size: 1.4rem;
  }
  100% {
    transform: translate(400px, 75px);
    color: rgba(0, 0, 0, 1);
    font-size: 2.4rem;
  }
}
@keyframes bgAni {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.visual {
  height: 120px;
  position: relative;
}
.visual::before,
.visual::after {
  animation: bgAni 3s ease-in-out infinite alternate;
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
}
.visual::before {
  background-image: url(./images/ani_flower_01.png),
    url(./images/ani_flower_02.png);
  background-position: 0 -10px, 670px 0;
  /* 개별 속성의 멀티 */
}
.visual::after {
  background-image: url(./images/ani_flower_03.png),
    url(./images/ani_flower_04.png);
  background-position: 300px 0px, 800px 20px;
  /* 개별 속성의 멀티 */
  animation-delay: 1.5s;
}
.visual-text {
  animation: textAni 2s ease-in-out forwards;
  font-weight: 400;
  font-family: Georgia, "Times New Roman", Times, serif;
  display: inline-block;
}

/* main content */
.main {
  background-color: #fff;
  min-height: 450px;
  padding: 30px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: flex-start;
  border-radius: 15px;
}
.group1 {
  width: 250px;
}
.group2 {
  width: 380px;
}
.group3 {
  background: coral;
  width: 190px;
}

/* 로그인 */
.login {
  background: linear-gradient(
    to right,
    #ea6619 0%,
    #ea915d 35%,
    #ea9260 70%,
    #eabb9f 100%
  );
  padding: 10px;
  border-radius: 5px;
  box-shadow: 5px 5px 0 0 #999;
  font-weight: 400;
  max-width: 245px;
}
.login-heading {
  margin: 0;
  font-size: 1.5rem;
  color: #e9f513;
  text-indent: 10px;
  line-height: 22px;
}
.login-form {
  background-color: #fff;
  padding: 10px;
  border-radius: 5px 5px 0 0;
  margin: 10px 0 0 0;
  position: relative;
}
/* .login-form [role="group"] {
  display: flex;
  flex-flow: column nowrap;
} */
.login-form fieldset {
  margin: 0;
  padding: 0;
  border: 0;
  position: relative;
  padding-bottom: 5px;
  border-bottom: 1px solid #aaa;
}
.user-email,
.user-pw {
  width: 160px;
  margin-bottom: 5px;
}
.user-email input,
.user-pw input {
  width: 95px;
  line-height: 1.2;
  text-indent: 0.3em;
  border: 1px solid #ccc;
}
.user-email [for="userEmail"],
.user-pw [for="userPw"] {
  display: inline-block;
  width: 4em;
  font-size: 1.4rem;
  width: 53px;
}
.btn-login {
  position: absolute;
  top: 0;
  right: 0;
  padding: 0;
  border: 1px solid #ea874d;
  width: 50px;
  height: 46px;
  background-color: #ea874d;
  color: #fff;
  border-radius: 3px;
  font-style: 1.2rem;
}
.member-only {
  background-color: #fff;
  list-style: none;
  margin: 0;
  padding-left: 0;
  padding: 0 10px 10px;
  border-radius: 0 0 5px 5px;
  font-size: 1.3rem;
}
.member-only li:nth-child(1) {
  float: left;
}
.member-only li:nth-child(2) {
  float: right;
}
.member-only a {
  padding: 5px 0;
}
.member-only a::before {
  content: "\e803";
  font-family: "fontello";
  display: inline-block;
  margin-right: 0.2em;
  color: #ea6619;
}
/* 유효성 검사 사이트 */
.validation-list {
  margin-top: 20px;
  padding-left: 0;
  list-style: none;
}
.validation-list li {
  border: 1px solid #aaa;
  background: linear-gradient(180deg, #aaa, #eee);
  border-radius: 30px;
  margin-bottom: 10px;
}
.validation-list [target] {
  display: block;
  padding: 6px 10px 6px 35px;
  background: url(./images/validation_icon.png) no-repeat 15px 50%;
}
/* 웹 관련 용어 */
.term {
  background: linear-gradient(180deg, #aaa, #eee);
  margin-top: 20px;
  border-radius: 5px;
  border: 1px solid #aaa;
  padding: 15px;
}
.term-heading {
  margin: 0;
  font-size: 1.5rem;
}
.term-list {
  position: relative;
  margin: 15px 0 0 0;
  padding-left: 75px;
}
.odd dd {
  margin: 0;
}
.term-list-subject {
  margin-bottom: 5px;
  color: #3f3880;
}
.term-list-brief {
  text-align: justify;
  line-height: 1.4;
}
.term-list-thumbnail {
  position: absolute;
  top: 0;
  left: 0;
}
/* 검색 폼 */
.search-form {
  border: 1px solid #aaa;
  border-bottom: 0;
  padding: 15px 20px;
  border-radius: 15px 15px 0 0;
  background: linear-gradient(180deg, #aaa, #eee);
}
.search-form fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}
.search-form label,
.search-form input,
.btn-search {
  vertical-align: middle;
}
.search-form input {
  width: 60%;
  height: 24px;
  border: 1px solid #aaa;
  border-radius: 3px;
  text-indent: 0.3em;
  padding: 0;
}
.search-form label {
  display: inline-block;
  padding-left: 10px;
}
.search-form label::before {
  content: "\e802";
  font-family: "fontello";
  display: inline-block;
  margin-right: 0.2em;
}
.btn-search {
  border: 1px solid #aaa;
  border-radius: 3px;
  background-color: #2d2c33;
  color: #fff;
  font-size: 1.2rem;
  height: 24px;
  padding: 0 10px;
}
/* 공지사항 및 자료실 */
.board {
  position: relative;
  margin-top: 20px;
  min-height: 130px;
  background-color: springgreen;
}
.notice-list,
.pds-list,
.notice-more,
.pds-more {
  display: none;
}
.tab-act .notice-list,
.tab-act .pds-list,
.tab-act .notice-more,
.tab-act .pds-more {
  display: block;
}
.notice-heading,
.pds-heading {
  margin: 0;
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 1.5;
}
.pds-heading {
  position: absolute;
  top: 0;
  left: 73px;
}
.notice-heading a,
.pds-heading a {
  padding: 5px 10px;
  display: inline-block;
  border: 1px solid #aaa;
  border-bottom: 0;
  border-radius: 5px 5px 0 0;
  background: #ccc linear-gradient(180deg, #aaa, #eee);
}
.tab-act .notice-heading a,
.tab-act .pds-heading a {
  border: 1px solid #ea6619;
  border-bottom: 0;
  background: #fff;
  color: #ea6619;
  z-index: 1;
}
.notice-list,
.pds-list {
  list-style: none;
  padding-left: 0;
  margin-top: 15px;
}
.notice-list li,
.pds-list li {
  line-height: 20px;
  margin-bottom: 10px;
}
.notice-list li::after,
.pds-list li::after {
  content: "";
  display: block;
  clear: both;
}
.notice-list a,
.pds-list a {
  float: left;
  width: 70%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.notice-list a::before,
.pds-list a::before {
  content: "\f192";
  font-family: "fontello";
  display: inline-block;
  margin-right: 0.2em;
}
.notice-list time,
.pds-list time {
  float: right;
}
.notice-more,
.pds-more {
  position: absolute;
  top: -8px;
  right: -8px;
  padding: 8px;
}
.icon-plus {
  color: #175913;
}
.slogan {
  background-color: orange;
}
.footer-bg {
  background-color: purple;
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
}
.footer {
  background-color: skyblue;
}

/* ** 고정형 레이아웃 **

1. 가운데 정렬(화면 해상도)
2. 일관성을 가지고 디자인하기
3. header의 높이는 픽스하지 않는다
4. 의도에 따라서 픽스 시킨다.
5. main도 높이를 픽스하지 않고/ 최소 높이만 준다(min-height)
6. slogan, footer는 픽스하지 않는다 (픽스 = height의 값을 주다)

   ** header 순서 정하기 **

7. 로고 >>>>> text logo / text logo >>> img logo(alt속성 추기) >>>>> 대제목<h1.logo> , <a>기능
8. 멤버 링크 >>>> div만 쓰지 않고 기계도 해석 가능하게 만들기 >>>>> 목록화 (ul, ol.member >>> li)
   > > > > > > :은 span으로 묵기(읽을 필요는 없음 >> aria-hidden = true 사용 >> 보조 기기가 읽지 않음)
9. 내비게이션 */

/* offset 설정 : 위치값을 설정하다 
- static은 offset을  가지고 있지 않다./ 렐러티브를 가지지 않으면 가장 최상위 요소를 찾아간다 . 
-
*/
